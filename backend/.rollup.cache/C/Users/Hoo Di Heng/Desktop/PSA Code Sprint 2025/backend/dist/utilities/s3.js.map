{"version":3,"file":"s3.js","sourceRoot":"","sources":["../../utilities/s3.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from \"fs\";\r\nimport path from \"path\";\r\nimport { Readable } from \"stream\";\r\nimport { fileURLToPath } from \"url\";\r\nimport {\r\n\tDeleteObjectCommand,\r\n\tDeleteObjectsCommand,\r\n\tGetObjectCommand,\r\n\tHeadObjectCommand,\r\n\tPutObjectCommand,\r\n\tS3Client,\r\n} from \"@aws-sdk/client-s3\";\r\nimport { getSignedUrl } from \"@aws-sdk/s3-request-presigner\";\r\nimport { S3File } from \"@common/types/file.js\";\r\nimport axios from \"axios\";\r\nimport config from \"config\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getFileType } from \"./file.js\";\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\nconst s3Client = new S3Client({\r\n\tregion: \"auto\",\r\n\tendpoint: config.get(\"S3_URL\"),\r\n\tcredentials: {\r\n\t\taccessKeyId: config.get(\"S3_ACCESS_KEY_ID\"),\r\n\t\tsecretAccessKey: config.get(\"S3_SECRET_ACCESS_KEY\"),\r\n\t},\r\n});\r\n\r\nclass S3Service {\r\n\tgetPublicUrl(s3Filename: string, folders: string[]) {\r\n\t\treturn `${config.get<string>(\"S3_PUBLIC_URL\")}/${folders.join(\r\n\t\t\t\"/\"\r\n\t\t)}/${s3Filename}`;\r\n\t}\r\n\r\n\tasync uploadFile(\r\n\t\tfile: File | Buffer,\r\n\t\ts3Filename: string,\r\n\t\tfolder: string[],\r\n\t\tdescription: string = \"\"\r\n\t): Promise<S3File> {\r\n\t\tlet buffer: Buffer;\r\n\t\tlet fileName: string = \"\";\r\n\r\n\t\tconst fileType = await getFileType(file);\r\n\r\n\t\tif (Buffer.isBuffer(file)) {\r\n\t\t\tbuffer = file;\r\n\t\t} else if (file instanceof File) {\r\n\t\t\tbuffer = Buffer.from(await file.arrayBuffer());\r\n\t\t\tfileName = file.name;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unsupported file type\");\r\n\t\t}\r\n\r\n\t\tif (!fileName.includes(\".\")) {\r\n\t\t\tfileName = fileType?.ext\r\n\t\t\t\t? `${fileName}.${fileType?.ext}`\r\n\t\t\t\t: fileName;\r\n\t\t}\r\n\r\n\t\tconst tempPath = path.join(__dirname, \"../temp\", s3Filename);\r\n\t\t// create directory for file if it doesnt exist\r\n\t\tawait fs.promises.mkdir(path.dirname(tempPath), { recursive: true });\r\n\t\t// write buffer to file\r\n\t\tawait fs.promises.writeFile(tempPath, buffer);\r\n\t\t// create stream from file path\r\n\t\tconst fileStream = Readable.from(buffer);\r\n\r\n\t\tconst params = {\r\n\t\t\tBucket: config.get<string>(\"S3_BUCKET\"),\r\n\t\t\tKey: [...folder, s3Filename].join(\"/\"),\r\n\t\t\tBody: fileStream,\r\n\t\t\tContentType: fileType?.mime,\r\n\t\t\tContentLength: buffer.length,\r\n\t\t};\r\n\r\n\t\tconst command = new PutObjectCommand(params);\r\n\t\tawait s3Client.send(command);\r\n\r\n\t\tawait fs.promises.unlink(tempPath);\r\n\t\treturn {\r\n\t\t\tfilename: fileName,\r\n\t\t\ts3Filename,\r\n\t\t\tfolder,\r\n\t\t\tmimeType: fileType?.mime,\r\n\t\t\turl: this.getPublicUrl(s3Filename, folder),\r\n\t\t\tdescription,\r\n\t\t};\r\n\t}\r\n\r\n\t// Randomly generate s3 filename\r\n\tasync uploadFileWithHashing(\r\n\t\tfile: File | Buffer,\r\n\t\tfolder: string[]\r\n\t): Promise<S3File> {\r\n\t\tconst fileType = await getFileType(file);\r\n\t\tconst extension = fileType?.ext ? `.${fileType.ext}` : undefined;\r\n\t\tconst s3Filename = extension ? `${uuidv4()}${extension}` : uuidv4();\r\n\t\treturn this.uploadFile(file, s3Filename, folder);\r\n\t}\r\n\r\n\tasync uploadFiles(\r\n\t\tfiles: (File | Buffer)[],\r\n\t\ts3Filenames: string[],\r\n\t\tfolder: string[]\r\n\t): Promise<S3File[]> {\r\n\t\tif (files.length !== s3Filenames.length) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t\"Files and s3 filenames must have the same length.\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst responses = files.map((file, index) =>\r\n\t\t\tthis.uploadFile(file, s3Filenames[index], folder)\r\n\t\t);\r\n\t\treturn Promise.all(responses);\r\n\t}\r\n\r\n\tasync uploadFilesWithHashing(\r\n\t\tfiles: (File | Buffer)[],\r\n\t\tfolder: string[]\r\n\t): Promise<S3File[]> {\r\n\t\tconst s3Files = files.map((file) =>\r\n\t\t\tthis.uploadFileWithHashing(file, folder)\r\n\t\t);\r\n\t\treturn Promise.all(s3Files);\r\n\t}\r\n\r\n\tasync generatePresignedUrl(\r\n\t\ts3Filename: string,\r\n\t\tfolder: string[],\r\n\t\ttype: \"GET\" | \"PUT\" | \"DELETE\" | \"METADATA\",\r\n\t\tcontentDisposition: \"inline\" | \"attachment\" | string = \"inline\",\r\n\t\texpiresIn = 1800\r\n\t) {\r\n\t\tfolder.push(s3Filename);\r\n\t\tlet command;\r\n\t\tswitch (type) {\r\n\t\t\tcase \"GET\":\r\n\t\t\t\tcommand = new GetObjectCommand({\r\n\t\t\t\t\tBucket: config.get<string>(\"S3_BUCKET\"),\r\n\t\t\t\t\tKey: folder.join(\"/\"),\r\n\t\t\t\t\tResponseContentDisposition: contentDisposition,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"PUT\":\r\n\t\t\t\tcommand = new PutObjectCommand({\r\n\t\t\t\t\tBucket: config.get<string>(\"S3_BUCKET\"),\r\n\t\t\t\t\tKey: folder.join(\"/\"),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"DELETE\":\r\n\t\t\t\tcommand = new DeleteObjectCommand({\r\n\t\t\t\t\tBucket: config.get<string>(\"S3_BUCKET\"),\r\n\t\t\t\t\tKey: folder.join(\"/\"),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tcommand = new HeadObjectCommand({\r\n\t\t\t\t\tBucket: config.get<string>(\"S3_BUCKET\"),\r\n\t\t\t\t\tKey: folder.join(\"/\"),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tconst signedUrl = await getSignedUrl(s3Client, command, { expiresIn });\r\n\t\treturn signedUrl;\r\n\t}\r\n\r\n\tasync removeFile(s3File: S3File) {\r\n\t\tconst deleteUrl = await this.generatePresignedUrl(\r\n\t\t\ts3File.s3Filename,\r\n\t\t\ts3File.folder,\r\n\t\t\t\"DELETE\"\r\n\t\t);\r\n\t\tconst response = await axios.delete(deleteUrl);\r\n\t\treturn response;\r\n\t}\r\n\r\n\tasync removeFiles(s3Files: S3File[]) {\r\n\t\tif (s3Files.length === 0) return;\r\n\r\n\t\tconst objectsToDelete = s3Files.map((s3File) => {\r\n\t\t\tconst prefix = s3File.folder.join(\"/\");\r\n\t\t\treturn {\r\n\t\t\t\tKey: prefix\r\n\t\t\t\t\t? `${prefix}/${s3File.s3Filename}`\r\n\t\t\t\t\t: s3File.s3Filename,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst params = {\r\n\t\t\tBucket: config.get<string>(\"S3_BUCKET\"),\r\n\t\t\tDelete: {\r\n\t\t\t\tObjects: objectsToDelete,\r\n\t\t\t\tQuiet: false, // optional\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst response = await s3Client.send(new DeleteObjectsCommand(params));\r\n\t\treturn response;\r\n\t}\r\n}\r\n\r\nconst s3Service = new S3Service();\r\n\r\nexport default s3Service;\r\n"]}