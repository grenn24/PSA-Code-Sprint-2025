{"version":3,"file":"wb.js","sourceRoot":"","sources":["../../services/wb.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,cAAc,MAAM,iBAAiB,CAAC;AAC7C,OAAO,MAAM,MAAM,wBAAwB,CAAC;AAE5C,MAAM,SAAS;IACd,KAAK,CAAC,WAAW,CAAC,cAAsB,EAAE,WAAmB;QAC5D,MAAM,YAAY,GAAG,MAAM,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QACnE,IAAI,CAAC,YAAY,EAAE,CAAC;YACnB,MAAM,IAAI,SAAS,CAClB,wBAAwB,EACxB,WAAW,EACX,cAAc,CAAC,QAAQ,CACvB,CAAC;QACH,CAAC;QAED,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC1B,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,IAAI,IAAI,EAAE;SACrB,CAAC,CAAC;QAEH,MAAM,YAAY,GAAG;;;;;KAKlB,CAAC;QAEJ,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QAC9D,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC1B,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,QAAQ;YACd,SAAS,EAAE,IAAI,IAAI,EAAE;SACrB,CAAC,CAAC;QACH,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;QAE1B,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,MAAc,EAAE,WAAmB;QAC3D,MAAM,YAAY,GAAG;;;;;KAKlB,CAAC;QACJ,MAAM,cAAc,GAAG,MAAM,cAAc,CAAC,MAAM,CAAC;YAClD,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;SAC/C,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QAC9D,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC5B,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,QAAQ;YACd,SAAS,EAAE,IAAI,IAAI,EAAE;SACrB,CAAC,CAAC;QACH,MAAM,cAAc,CAAC,IAAI,EAAE,CAAC;QAE5B,OAAO,cAAc,CAAC;IACvB,CAAC;CACD;AAED,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;AAClC,eAAe,SAAS,CAAC","sourcesContent":["import { HttpStatusCode } from \"@common/constants/statusCode.js\";\r\nimport { HttpError } from \"../middlewares/error.js\";\r\nimport WBConversation from \"../models/wb.js\";\r\nimport openai from \"../utilities/openai.js\";\r\n\r\nclass WBService {\r\n\tasync postMessage(conversationId: string, userMessage: string) {\r\n\t\tconst conversation = await WBConversation.findById(conversationId);\r\n\t\tif (!conversation) {\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"Conversation not found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconversation.messages.push({\r\n\t\t\trole: \"user\",\r\n\t\t\ttext: userMessage,\r\n\t\t\ttimestamp: new Date(),\r\n\t\t});\r\n\r\n\t\tconst systemPrompt = `\r\n      You are a friendly and empathetic wellness assistant named Wellness Buddy ðŸ¤–.\r\n      Your goal is to provide concise, positive advice on mental wellness, mindfulness, stress management,\r\n      mood tracking, and general wellbeing. \r\n      Keep the tone encouraging, empathetic, and easy to understand.\r\n    `;\r\n\r\n\t\tconst response = await openai.chat(userMessage, systemPrompt);\r\n\t\tconversation.messages.push({\r\n\t\t\trole: \"wb\",\r\n\t\t\ttext: response,\r\n\t\t\ttimestamp: new Date(),\r\n\t\t});\r\n\t\tawait conversation.save();\r\n\r\n\t\treturn response;\r\n\t}\r\n\r\n\tasync createConversation(userID: string, userMessage: string) {\r\n\t\tconst systemPrompt = `\r\n      You are a friendly and empathetic wellness assistant named Wellness Buddy ðŸ¤–.\r\n      Your goal is to provide concise, positive advice on mental wellness, mindfulness, stress management,\r\n      mood tracking, and general wellbeing. \r\n      Keep the tone encouraging, empathetic, and easy to understand.\r\n    `;\r\n\t\tconst wbConversation = await WBConversation.create({\r\n\t\t\tuser: userID,\r\n\t\t\tmessages: [{ role: \"user\", text: userMessage }],\r\n\t\t});\r\n\t\tconst response = await openai.chat(userMessage, systemPrompt);\r\n\t\twbConversation.messages.push({\r\n\t\t\trole: \"wb\",\r\n\t\t\ttext: response,\r\n\t\t\ttimestamp: new Date(),\r\n\t\t});\r\n\t\tawait wbConversation.save();\r\n\r\n\t\treturn wbConversation;\r\n\t}\r\n}\r\n\r\nconst wbService = new WBService();\r\nexport default wbService;\r\n"]}