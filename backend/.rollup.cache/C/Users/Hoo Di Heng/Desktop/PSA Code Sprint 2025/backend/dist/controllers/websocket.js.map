{"version":3,"file":"websocket.js","sourceRoot":"","sources":["../../controllers/websocket.ts"],"names":[],"mappings":"AAEA,OAAO,SAAS,MAAM,mBAAmB,CAAC;AAC1C,OAAO,gBAAgB,MAAM,2BAA2B,CAAC;AAEzD,MAAM,mBAAmB;IACxB,KAAK,CAAC,WAAW,CAAC,SAAoB,EAAE,OAAyB;QAChE,MAAM,OAAO,GAAG,CAAC,KAAa,EAAE,EAAE,CACjC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,EAAE;YACpC,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,KAAK;YACX,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,cAAc,EAAE,OAAO,CAAC,cAAc;SACtC,CAAC,CAAC;QACJ,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,WAAW,CAC3C,OAAO,CAAC,cAAc,EACtB,OAAO,CAAC,IAAI,EACZ,OAAO,CACP,CAAC;QACF,gBAAgB,CAAC,QAAQ,CAAC,SAAS,EAAE;YACpC,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,QAAQ;YACd,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,cAAc,EAAE,OAAO,CAAC,cAAc;SACtC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,oBAAoB,CACzB,SAAoB,EACpB,OAAyB;QAEzB,MAAM,OAAO,GAAG,CAAC,KAAa,EAAE,EAAE,CACjC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,EAAE;YACpC,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,KAAK;YACX,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,cAAc,EAAE,OAAO,CAAC,cAAc;SACtC,CAAC,CAAC;QACJ,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,oBAAoB,CACpD,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,OAAO,EACf,OAAO,EACP,OAAO,CAAC,YAAY,CACpB,CAAC;QACF,gBAAgB,CAAC,QAAQ,CAAC,SAAS,EAAE;YACpC,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,QAAQ;YACd,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,cAAc,EAAE,OAAO,CAAC,cAAc;SACtC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,SAAoB,EAAE,OAAyB;QACrE,MAAM,OAAO,GAAG,CAAC,KAAa,EAAE,EAAE,CACjC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,EAAE;YACpC,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,KAAK;YACX,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACnC,CAAC,CAAC;QACJ,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,gBAAgB,CAChD,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,OAAO,EACf,OAAO,CACP,CAAC;QACF,gBAAgB,CAAC,QAAQ,CAAC,SAAS,EAAE;YACpC,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,QAAQ;YACd,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACnC,CAAC,CAAC;IACJ,CAAC;CACD;AAED,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;AACtD,eAAe,mBAAmB,CAAC","sourcesContent":["import { WebsocketMessage } from \"@common/types/http.js\";\r\nimport WebSocket from \"ws\";\r\nimport wbService from \"../services/wb.js\";\r\nimport websocketService from \"../utilities/websocket.js\";\r\n\r\nclass WebsocketController {\r\n\tasync postMessage(websocket: WebSocket, message: WebsocketMessage) {\r\n\t\tconst onDelta = (chunk: string) =>\r\n\t\t\twebsocketService.sendToWS(websocket, {\r\n\t\t\t\ttype: \"wb_stream_chunk\",\r\n\t\t\t\tdata: chunk,\r\n\t\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t\t\tconversationID: message.conversationID,\r\n\t\t\t});\r\n\t\tconst response = await wbService.postMessage(\r\n\t\t\tmessage.conversationID,\r\n\t\t\tmessage.data,\r\n\t\t\tonDelta\r\n\t\t);\r\n\t\twebsocketService.sendToWS(websocket, {\r\n\t\t\ttype: \"wb_stream_end\",\r\n\t\t\tdata: response,\r\n\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t\tconversationID: message.conversationID,\r\n\t\t});\r\n\t}\r\n\r\n\tasync postMessageStateless(\r\n\t\twebsocket: WebSocket,\r\n\t\tmessage: WebsocketMessage\r\n\t) {\r\n\t\tconst onDelta = (chunk: string) =>\r\n\t\t\twebsocketService.sendToWS(websocket, {\r\n\t\t\t\ttype: \"wb_stream_chunk\",\r\n\t\t\t\tdata: chunk,\r\n\t\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t\t\tconversationID: message.conversationID,\r\n\t\t\t});\r\n\t\tconst response = await wbService.postMessageStateless(\r\n\t\t\tmessage.data,\r\n\t\t\tmessage.history,\r\n\t\t\tonDelta,\r\n\t\t\tmessage.systemPrompt\r\n\t\t);\r\n\t\twebsocketService.sendToWS(websocket, {\r\n\t\t\ttype: \"wb_stream_end\",\r\n\t\t\tdata: response,\r\n\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t\tconversationID: message.conversationID,\r\n\t\t});\r\n\t}\r\n\r\n\tasync trackMoodChanges(websocket: WebSocket, message: WebsocketMessage) {\r\n\t\tconst onDelta = (chunk: string) =>\r\n\t\t\twebsocketService.sendToWS(websocket, {\r\n\t\t\t\ttype: \"wb_stream_chunk\",\r\n\t\t\t\tdata: chunk,\r\n\t\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t\t});\r\n\t\tconst response = await wbService.trackMoodChanges(\r\n\t\t\tmessage.userID,\r\n\t\t\tmessage.data,\r\n\t\t\tmessage.history,\r\n\t\t\tonDelta\r\n\t\t);\r\n\t\twebsocketService.sendToWS(websocket, {\r\n\t\t\ttype: \"wb_stream_end\",\r\n\t\t\tdata: response,\r\n\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst websocketController = new WebsocketController();\r\nexport default websocketController;\r\n"]}