{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../controllers/auth.ts"],"names":[],"mappings":"AACA,OAAO,WAAW,MAAM,qBAAqB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,MAAM,cAAc;IACnB,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ;QAC5B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;QACzC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACjE,QAAQ;aACN,MAAM,CAAC,WAAW,EAAE,KAAK,EAAE;YAC3B,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;YAC7C,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,QAAQ;SACrC,CAAC;aACD,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC;YACL,KAAK,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,OAAgB,EAAE,QAAkB;QAChD,QAAQ;aACN,MAAM,CAAC,WAAW,EAAE,EAAE,EAAE;YACxB,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;YAC7C,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;SACpB,CAAC;aACD,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,WAAW,CAAC,OAAO;QAClB,OAAO,KAAK,EACX,OAAgB,EAChB,QAAkB,EAClB,IAAkB,EACjB,EAAE;YACH,IAAI,CAAC;gBACJ,MAAM,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAClC,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACd,yBAAyB;gBACzB,IAAI,GAAG,YAAY,SAAS,EAAE,CAAC;oBAC9B,wBAAwB;oBACxB,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACzC,OAAO;gBACR,CAAC;qBAAM,IACN,GAAG,YAAY,QAAQ,CAAC,KAAK,CAAC,qBAAqB;oBACnD,GAAG,YAAY,QAAQ,CAAC,KAAK,CAAC,eAAe,EAC5C,CAAC;oBACF,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;oBACpD,OAAO;gBACR,CAAC;qBAAM,CAAC;oBACP,yBAAyB;oBACzB,IAAI,CAAC,GAAG,CAAC,CAAC;gBACX,CAAC;YACF,CAAC;QACF,CAAC,CAAC;IACH,CAAC;CACD;AAED,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAC5C,eAAe,cAAc,CAAC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\r\nimport authService from \"../services/auth.js\";\r\nimport { HttpError } from \"../middlewares/error.js\";\r\nimport mongoose from \"mongoose\";\r\n\r\nclass AuthController {\r\n\tasync login(request, response) {\r\n\t\tconst { email, password } = request.body;\r\n\t\tconst { token, user } = await authService.login(email, password);\r\n\t\tresponse\r\n\t\t\t.cookie(\"authToken\", token, {\r\n\t\t\t\thttpOnly: true,\r\n\t\t\t\tsecure: process.env.NODE_ENV === \"production\",\r\n\t\t\t\tsameSite: \"strict\",\r\n\t\t\t\tmaxAge: 1000 * 60 * 60 * 24, // 1 day\r\n\t\t\t})\r\n\t\t\t.status(200)\r\n\t\t\t.send({\r\n\t\t\t\ttoken, user\r\n\t\t\t});\r\n\t}\r\n\r\n\tasync logout(request: Request, response: Response) {\r\n\t\tresponse\r\n\t\t\t.cookie(\"authToken\", \"\", {\r\n\t\t\t\thttpOnly: true,\r\n\t\t\t\tsecure: process.env.NODE_ENV === \"production\",\r\n\t\t\t\tsameSite: \"strict\",\r\n\t\t\t\texpires: new Date(0),\r\n\t\t\t})\r\n\t\t\t.status(200)\r\n\t\t\t.send({ message: \"Logged out successfully\" });\r\n\t}\r\n\r\n\tcatchErrors(handler) {\r\n\t\treturn async (\r\n\t\t\trequest: Request,\r\n\t\t\tresponse: Response,\r\n\t\t\tnext: NextFunction\r\n\t\t) => {\r\n\t\t\ttry {\r\n\t\t\t\tawait handler(request, response);\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// Custom response errors\r\n\t\t\t\tif (err instanceof HttpError) {\r\n\t\t\t\t\t// Custom response error\r\n\t\t\t\t\tresponse.status(err.errorCode).send(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\terr instanceof mongoose.Error.DocumentNotFoundError ||\r\n\t\t\t\t\terr instanceof mongoose.Error.ValidationError\r\n\t\t\t\t) {\r\n\t\t\t\t\tresponse.status(400).send({ message: err.message });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Internal Server Errors\r\n\t\t\t\t\tnext(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\nconst authController = new AuthController();\r\nexport default authController;\r\n"]}