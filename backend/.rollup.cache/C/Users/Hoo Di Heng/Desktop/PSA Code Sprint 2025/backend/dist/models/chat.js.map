{"version":3,"file":"chat.js","sourceRoot":"","sources":["../../models/chat.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAEzC,MAAM,aAAa,GAAG,IAAI,MAAM,CAAC;IAChC,OAAO,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;KACX;IACD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACpE,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE;IAC5C,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IACvC,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;IACtB,IAAI,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE;YACL,MAAM;YACN,MAAM;YACN,KAAK;YACL,MAAM;YACN,MAAM;YACN,UAAU;YACV,iBAAiB;YACjB,UAAU;YACV,YAAY;YACZ,iBAAiB;SACjB;QACD,OAAO,EAAE,MAAM;KACf;IACD,QAAQ,EAAE;QACT,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK;QACxB,OAAO,EAAE,EAAE;KACX;CACD,CAAC,CAAC;AACH,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC;IAC7B,YAAY,EAAE;QACb,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;QACpD,QAAQ,EAAE,IAAI;KACd;IACD,QAAQ,EAAE;QACT,IAAI,EAAE,CAAC,aAAa,CAAC;QACrB,OAAO,EAAE,EAAE;KACX;IACD,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE;CAC5C,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAEvC,eAAe,IAAI,CAAC","sourcesContent":["import { model, Schema } from \"mongoose\";\r\n\r\nconst messageSchema = new Schema({\r\n\tcontent: {\r\n\t\ttype: String,\r\n\t\tdefault: \"\",\r\n\t},\r\n\tsender: { type: Schema.Types.ObjectId, ref: \"User\", required: true },\r\n\tcreatedAt: { type: Date, default: Date.now },\r\n\tread: { type: Boolean, default: false },\r\n\treadAt: { type: Date },\r\n\ttype: {\r\n\t\ttype: String,\r\n\t\tenum: [\r\n\t\t\t\"text\",\r\n\t\t\t\"file\",\r\n\t\t\t\"tip\",\r\n\t\t\t\"quiz\",\r\n\t\t\t\"poll\",\r\n\t\t\t\"feedback\",\r\n\t\t\t\"feedbackRequest\",\r\n\t\t\t\"question\",\r\n\t\t\t\"moodUpdate\",\r\n\t\t\t\"wellbeingPrompt\",\r\n\t\t],\r\n\t\tdefault: \"text\",\r\n\t},\r\n\tmetadata: {\r\n\t\ttype: Schema.Types.Mixed,\r\n\t\tdefault: {},\r\n\t},\r\n});\r\nconst chatSchema = new Schema({\r\n\tparticipants: {\r\n\t\ttype: [{ type: Schema.Types.ObjectId, ref: \"User\" }],\r\n\t\trequired: true,\r\n\t},\r\n\tmessages: {\r\n\t\ttype: [messageSchema],\r\n\t\tdefault: [],\r\n\t},\r\n\tcreatedAt: { type: Date, default: Date.now },\r\n});\r\n\r\nconst Chat = model(\"Chat\", chatSchema);\r\n\r\nexport default Chat;\r\n"]}