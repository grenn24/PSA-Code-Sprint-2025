{"version":3,"file":"s3.js","sourceRoot":"","sources":["../../models/s3.ts"],"names":[],"mappings":"AAEA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAChC,OAAO,SAAS,MAAM,oBAAoB,CAAC;AAE3C,MAAM,CAAC,MAAM,YAAY,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IAC/C,UAAU,EAAE;QACX,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACd;IACD,QAAQ,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;KACX;IACD,GAAG,EAAE,MAAM;IACX,MAAM,EAAE,CAAC,MAAM,CAAC;IAChB,QAAQ,EAAE,MAAM;IAChB,WAAW,EAAE;QACZ,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;KACX;CACD,CAAC,CAAC;AAEH,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,WAAW,MAAM;IAClD,IAAI,MAAM,EAAE,CAAC;QACZ,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IACvE,CAAC;AACF,CAAC,CAAC,CAAC;AAEH,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,WAAW,OAAO;IAChD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;QAC/B,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACvB,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACJ,CAAC;AACF,CAAC,CAAC,CAAC","sourcesContent":["import { HttpError } from \"@common/types/http.js\";\r\n\r\nimport mongoose from \"mongoose\";\r\nimport s3Service from \"../utilities/s3.js\";\r\n\r\nexport const s3FileSchema = new mongoose.Schema({\r\n\ts3Filename: {\r\n\t\ttype: String,\r\n\t\trequired: true,\r\n\t},\r\n\tfilename: {\r\n\t\ttype: String,\r\n\t\tdefault: \"\",\r\n\t},\r\n\turl: String,\r\n\tfolder: [String],\r\n\tmimeType: String,\r\n\tdescription: {\r\n\t\ttype: String,\r\n\t\tdefault: \"\",\r\n\t},\r\n});\r\n\r\ns3FileSchema.post(\"findOne\", async function (s3File) {\r\n\tif (s3File) {\r\n\t\ts3File.url = s3Service.getPublicUrl(s3File.s3Filename, s3File.folder);\r\n\t}\r\n});\r\n\r\ns3FileSchema.post(\"find\", async function (s3Files) {\r\n\tif (s3Files && s3Files.length) {\r\n\t\ts3Files.forEach((doc) => {\r\n\t\t\tdoc.url = s3Service.getPublicUrl(doc.s3Filename, doc.folder);\r\n\t\t});\r\n\t}\r\n});\r\n"]}