{"version":3,"file":"user.js","sourceRoot":"","sources":["../../services/user.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpStatusCode } from \"@common/constants/statusCode.js\";\r\nimport { HttpError } from \"../middlewares/error.js\";\r\nimport User from \"../models/user.js\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport websocketService from \"../utilities/websocket.js\";\r\nimport mongoose from \"mongoose\";\r\nimport Chat from \"../models/chat.js\";\r\n\r\nclass UserService {\r\n\t// Get all users\r\n\tasync getAllUsers() {\r\n\t\treturn await User.find().populate(\"mentors\").exec();\r\n\t}\r\n\r\n\t// Create a new user\r\n\tasync createUser(userData) {\r\n\t\tconst {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\trole,\r\n\t\t\tposition,\r\n\t\t\tsupervisor,\r\n\t\t\tsubordinates,\r\n\t\t\tavatar,\r\n\t\t\texperienceLevel,\r\n\t\t} = userData;\r\n\r\n\t\t// Check if email already exists\r\n\t\tconst existingUser = await User.findOne({ email });\r\n\t\tif (existingUser) {\r\n\t\t\tthrow new HttpError(\"Email already in use\");\r\n\t\t}\r\n\r\n\t\t// Hash password\r\n\t\tconst hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n\t\t// Create new user document\r\n\t\tconst user = new User({\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tpassword: hashedPassword,\r\n\t\t\trole,\r\n\t\t\tposition,\r\n\t\t\tsupervisor,\r\n\t\t\tsubordinates,\r\n\t\t\tavatar,\r\n\t\t\texperienceLevel,\r\n\t\t});\r\n\r\n\t\t// Save to DB\r\n\t\treturn await user.save();\r\n\t}\r\n\r\n\tasync getUserByID(userId) {\r\n\t\tconst user = await User.findById(userId)\r\n\t\t\t.populate(\"supervisor\")\r\n\t\t\t.populate(\"subordinates\")\r\n\t\t\t.populate(\"mentors\")\r\n\t\t\t.populate(\"mentees\")\r\n\t\t\t.populate(\"mentorshipRequests.sender\")\r\n\t\t\t.exec();\r\n\t\tif (!user) {\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"User not found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync updateUser(userId, userData) {\r\n\t\tconst user = await User.findById(userId);\r\n\t\tif (!user) {\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"User not found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst updatedUser = await User.findByIdAndUpdate(userId, userData, {\r\n\t\t\tnew: true,\r\n\t\t});\r\n\t\treturn updatedUser;\r\n\t}\r\n\r\n\tasync addNotification(userId: string, message: string) {\r\n\t\t// Add to DB\r\n\t\tconst user = await User.findByIdAndUpdate(\r\n\t\t\tuserId,\r\n\t\t\t{\r\n\t\t\t\t$push: {\r\n\t\t\t\t\tnotifications: {\r\n\t\t\t\t\t\tmessage,\r\n\t\t\t\t\t\tread: false,\r\n\t\t\t\t\t\tcreatedAt: new Date(),\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{ new: true }\r\n\t\t);\r\n\r\n\t\tif (!user)\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"User not found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\r\n\t\tconst notifications = user.notifications;\r\n\r\n\t\twebsocketService.sendTo(userId, {\r\n\t\t\ttype: \"NEW_NOTIFICATION\",\r\n\t\t\tdata: notifications.pop(),\r\n\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t});\r\n\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync sendMentorshipRequest(\r\n\t\tsenderID: string,\r\n\t\tmentorID: string,\r\n\t\tmessage?: string\r\n\t) {\r\n\t\tconst sender = await User.findById(senderID);\r\n\t\tif (!sender)\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"Sendernot found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\t\tconst mentor = await User.findById(mentorID);\r\n\t\tif (!mentor)\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"Mentor not found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\t\tmentor.mentorshipRequests.push({\r\n\t\t\tsender: senderID,\r\n\t\t\tmessage,\r\n\t\t});\r\n\t\tawait mentor.save();\r\n\t\tawait this.addNotification(\r\n\t\t\tmentorID,\r\n\t\t\t`${sender.name} sent you a mentorship request\\n${message}`\r\n\t\t);\r\n\t}\r\n\r\n\tasync getChats(userID: string) {\r\n\t\tconst user = await User.findById(userID);\r\n\t\tif (!user) {\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"User not found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst chats = Chat.find({\r\n\t\t\tparticipants: {\r\n\t\t\t\t$in: [userID],\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.populate(\"participants\")\r\n\t\t\t.exec();\r\n\t\treturn chats;\r\n\t}\r\n\r\n\tasync getNotifications(userID: string) {\r\n\t\tconst user = await User.findById(userID);\r\n\t\tif (!user) {\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"User not found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn user.notifications;\r\n\t}\r\n\r\n\tasync getTopMatchedMentors(\r\n\t\tuserId: string,\r\n\t\tlimit?: number,\r\n\t\tpage: number = 0\r\n\t) {\r\n\t\tconst mentee = await User.findById(userId).populate(\"mentors\").exec();\r\n\t\tif (!mentee)\r\n\t\t\tthrow new HttpError(\r\n\t\t\t\t\"User not found\",\r\n\t\t\t\t\"NOT_FOUND\",\r\n\t\t\t\tHttpStatusCode.NotFound\r\n\t\t\t);\r\n\r\n\t\tconst mentors = await User.find({\r\n\t\t\t_id: {\r\n\t\t\t\t$ne: userId,\r\n\t\t\t\t$nin: (mentee as any).mentors?.map(\r\n\t\t\t\t\t(mentor) => new mongoose.Types.ObjectId(mentor._id)\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t\texperienceLevel: { $gte: mentee.experienceLevel },\r\n\t\t\tmentorshipRequests: {\r\n\t\t\t\t$not: {\r\n\t\t\t\t\t$elemMatch: { sender: new mongoose.Types.ObjectId(userId) },\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.populate(\"supervisor\")\r\n\t\t\t.populate(\"subordinates\")\r\n\t\t\t.populate(\"mentors\")\r\n\t\t\t.populate(\"mentees\")\r\n\t\t\t.populate(\"mentorshipRequests.sender\")\r\n\t\t\t.exec();\r\n\r\n\t\tconst w1 = 0.4;\r\n\t\tconst w2 = 0.2;\r\n\t\tconst w3 = 0.3;\r\n\r\n\t\tconst scoredMentors = mentors.map((mentor) => {\r\n\t\t\tconst skill_alignment = this.calculateSkillAlignment(\r\n\t\t\t\tmentee.skills,\r\n\t\t\t\tmentor.skills\r\n\t\t\t);\r\n\t\t\tconst experience_diff =\r\n\t\t\t\tmentor.experienceLevel - mentee.experienceLevel;\r\n\t\t\tconst career_path_similarity = this.calculateCareerPathSimilarity(\r\n\t\t\t\tmentee.careerPath,\r\n\t\t\t\tmentor.careerPath\r\n\t\t\t);\r\n\r\n\t\t\tconst score =\r\n\t\t\t\tw1 * skill_alignment +\r\n\t\t\t\tw2 * experience_diff +\r\n\t\t\t\tw3 * career_path_similarity;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmentor,\r\n\t\t\t\tscore,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn scoredMentors\r\n\t\t\t.sort((a, b) => b.score - a.score)\r\n\t\t\t.slice(\r\n\t\t\t\tpage * (limit || scoredMentors.length),\r\n\t\t\t\t(limit || scoredMentors.length) * (page + 1)\r\n\t\t\t)\r\n\t\t\t.map((m) => m.mentor);\r\n\t}\r\n\r\n\t// Helper: Skill Alignment (cosine similarity–like)\r\n\tprivate calculateSkillAlignment(menteeSkills: any[], mentorSkills: any[]) {\r\n\t\tif (!menteeSkills.length || !mentorSkills.length) return 0;\r\n\r\n\t\tlet overlap = 0;\r\n\t\tfor (const ms of menteeSkills) {\r\n\t\t\tconst match = mentorSkills.find(\r\n\t\t\t\t(s) => s.name.toLowerCase() === ms.name.toLowerCase()\r\n\t\t\t);\r\n\t\t\tif (match) overlap += Math.min(match.level, ms.level);\r\n\t\t}\r\n\r\n\t\tconst total = mentorSkills.reduce((sum, s) => sum + s.level, 0);\r\n\t\treturn total ? overlap / total : 0;\r\n\t}\r\n\r\n\tprivate calculateCareerPathSimilarity(\r\n\t\tmenteePath: any[],\r\n\t\tmentorPath: any[]\r\n\t) {\r\n\t\tconst menteePositions = new Set(menteePath.map((p) => p.position));\r\n\t\tconst mentorPositions = new Set(mentorPath.map((p) => p.position));\r\n\r\n\t\tconst intersection = [...menteePositions].filter((p) =>\r\n\t\t\tmentorPositions.has(p)\r\n\t\t);\r\n\t\tconst union = new Set([...menteePositions, ...mentorPositions]);\r\n\r\n\t\treturn union.size > 0 ? intersection.length / union.size : 0;\r\n\t}\r\n\r\n\tasync deleteAllUsers() {\r\n\t\treturn await User.deleteMany({}).exec();\r\n\t}\r\n}\r\n\r\nconst userService = new UserService();\r\nexport default userService;\r\n"]}