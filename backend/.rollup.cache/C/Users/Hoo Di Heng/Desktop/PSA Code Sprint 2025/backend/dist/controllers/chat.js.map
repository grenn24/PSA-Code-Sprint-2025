{"version":3,"file":"chat.js","sourceRoot":"","sources":["../../controllers/chat.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,QAAQ,MAAM,UAAU,CAAC;AAChC,OAAO,WAAW,MAAM,qBAAqB,CAAC;AAE9C,MAAM,cAAc;IACnB,KAAK,CAAC,WAAW,CAAC,OAAgB,EAAE,QAAkB;QACrD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QACnC,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QACpE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAgB,EAAE,QAAkB;QACvD,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAA;QACpC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;QACtC,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;QAC5C,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,aAAa,CAC9C,OAAO,CAAC,EAAE,EACV,SAAS,EACT,MAAM,EACN,OAAO,CAAC,IAAI,CACZ,CAAC;QACF,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAgB,EAAE,QAAkB;QACpD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QACtE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,OAAgB,EAAE,QAAkB;QAC5D,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QACnC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC;QACxC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,kBAAkB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAClE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,WAAW,CAAC,OAAO;QAClB,OAAO,KAAK,EACX,OAAgB,EAChB,QAAkB,EAClB,IAAkB,EACjB,EAAE;YACH,IAAI,CAAC;gBACJ,MAAM,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAClC,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACd,yBAAyB;gBACzB,IAAI,GAAG,YAAY,SAAS,EAAE,CAAC;oBAC9B,wBAAwB;oBACxB,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACzC,OAAO;gBACR,CAAC;qBAAM,IACN,GAAG,YAAY,QAAQ,CAAC,KAAK,CAAC,qBAAqB;oBACnD,GAAG,YAAY,QAAQ,CAAC,KAAK,CAAC,eAAe,EAC5C,CAAC;oBACF,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;oBACpD,OAAO;gBACR,CAAC;qBAAM,CAAC;oBACP,yBAAyB;oBACzB,IAAI,CAAC,GAAG,CAAC,CAAC;gBACX,CAAC;YACF,CAAC;QACF,CAAC,CAAC;IACH,CAAC;CACD;AAED,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAC5C,eAAe,cAAc,CAAC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\r\n\r\nimport { HttpError } from \"../middlewares/error.js\";\r\nimport mongoose from \"mongoose\";\r\nimport chatService from \"../services/chat.js\";\r\n\r\nclass ChatController {\r\n\tasync postMessage(request: Request, response: Response) {\r\n\t\tconst chatID = response.locals._id;\r\n\t\tconst message = await chatService.postMessage(chatID, request.body);\r\n\t\tresponse.status(200).send(message);\r\n\t}\r\n\r\n\tasync updateMessage(request: Request, response: Response) {\r\n\t\tconst updater = response.locals.user\r\n\t\tconst chatID = response.locals.chatID;\r\n\t\tconst messageID = response.locals.messageID;\r\n\t\tconst message = await chatService.updateMessage(\r\n\t\t\tupdater.id,\r\n\t\t\tmessageID,\r\n\t\t\tchatID,\r\n\t\t\trequest.body\r\n\t\t);\r\n\t\tresponse.status(200).send(message);\r\n\t}\r\n\r\n\tasync createChat(request: Request, response: Response) {\r\n\t\tconst chat = await chatService.createChat(request.body?.participants);\r\n\t\tresponse.status(200).send(chat);\r\n\t}\r\n\r\n\tasync markMessagesAsRead(request: Request, response: Response) {\r\n\t\tconst chatID = response.locals._id;\r\n\t\tconst userID = response.locals.user?.id;\r\n\t\tconst chat = await chatService.markMessagesAsRead(chatID, userID);\r\n\t\tresponse.status(200).send(chat);\r\n\t}\r\n\r\n\tcatchErrors(handler) {\r\n\t\treturn async (\r\n\t\t\trequest: Request,\r\n\t\t\tresponse: Response,\r\n\t\t\tnext: NextFunction\r\n\t\t) => {\r\n\t\t\ttry {\r\n\t\t\t\tawait handler(request, response);\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// Custom response errors\r\n\t\t\t\tif (err instanceof HttpError) {\r\n\t\t\t\t\t// Custom response error\r\n\t\t\t\t\tresponse.status(err.errorCode).send(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\terr instanceof mongoose.Error.DocumentNotFoundError ||\r\n\t\t\t\t\terr instanceof mongoose.Error.ValidationError\r\n\t\t\t\t) {\r\n\t\t\t\t\tresponse.status(400).send({ message: err.message });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Internal Server Errors\r\n\t\t\t\t\tnext(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\nconst chatController = new ChatController();\r\nexport default chatController;\r\n"]}