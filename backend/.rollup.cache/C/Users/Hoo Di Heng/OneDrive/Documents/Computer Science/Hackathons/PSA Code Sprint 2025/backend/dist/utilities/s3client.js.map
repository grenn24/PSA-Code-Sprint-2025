{"version":3,"file":"s3client.js","sourceRoot":"","sources":["../../utilities/s3client.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAChE,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,MAAM,IAAI,CAAC;AACpB,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC;IAC7B,MAAM,EAAE,qBAAqB;IAC7B,QAAQ,EACP,iFAAiF;IAClF,WAAW,EAAE;QACZ,WAAW,EAAE,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAC;QAC3C,eAAe,EAAE,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC;KACnD;CACD,CAAC,CAAC;AAEH,MAAM,UAAU,GAAG,KAAK,EACvB,IAAU,EACV,QAAgB,EAChB,UAAoB,EAAE,EACrB,EAAE;IACH,IAAI,CAAC;QACJ,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,MAAM,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,uBAAuB;QACtE,MAAM,UAAU,GAAG,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,0BAA0B;QAE5E,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACtB,MAAM,MAAM,GAAG;YACd,MAAM,EAAE,eAAe;YACvB,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;YACtB,IAAI,EAAE,UAAU;YAChB,WAAW,EAAE,IAAI,CAAC,IAAI;SACtB,CAAC;QAEF,MAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAE7C,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,OAAO,QAAQ,CAAC;IACjB,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QACnB,MAAM,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\r\nimport config from \"config\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\n\r\nconst s3Client = new S3Client({\r\n\tregion: \"Asia-Pacific (APAC)\",\r\n\tendpoint:\r\n\t\t\"https://b1cb741b9309fdc766c68da7e934df35.r2.cloudflarestorage.com/journeywonder\",\r\n\tcredentials: {\r\n\t\taccessKeyId: config.get(\"S3_ACCESS_KEY_ID\"),\r\n\t\tsecretAccessKey: config.get(\"S3_SECRET_ACCESS_KEY\"),\r\n\t},\r\n});\r\n\r\nconst uploadFile = async (\r\n\tfile: File,\r\n\tfilename: string,\r\n\tfolders: string[] = []\r\n) => {\r\n\ttry {\r\n\t\tconst buffer = Buffer.from(await file.arrayBuffer());\r\n\t\tconst tempPath = path.join(__dirname, \"temp_\" + file.name);\r\n\t\tawait fs.promises.writeFile(tempPath, buffer); // write buffer to file\r\n\t\tconst fileStream = fs.createReadStream(tempPath); // create stream from path\r\n\r\n\t\tfolders.push(filename)\r\n\t\tconst params = {\r\n\t\t\tBucket: \"journeywonder\",\r\n\t\t\tKey: folders.join(\"/\"),\r\n\t\t\tBody: fileStream,\r\n\t\t\tContentType: file.type,\r\n\t\t};\r\n\r\n\t\tconst command = new PutObjectCommand(params);\r\n\r\n\t\tconst response = await s3Client.send(command);\r\n\t\treturn response;\r\n\t} catch (err: any) {\r\n\t\tthrow new err();\r\n\t}\r\n};\r\n"]}